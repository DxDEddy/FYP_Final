endbr64
sub
mov
test
je
call
add
ret
push
bnd
nopl
endbr64
push
bnd
nop
endbr64
push
bnd
nop
endbr64
push
bnd
nop
endbr64
push
bnd
nop
endbr64
push
bnd
nop
endbr64
push
bnd
nop
endbr64
push
bnd
nop
endbr64
push
bnd
nop
endbr64
push
bnd
nop
endbr64
push
bnd
nop
endbr64
push
bnd
nop
endbr64
push
bnd
nop
endbr64
push
bnd
nop
endbr64
push
bnd
nop
endbr64
push
bnd
nop
endbr64
push
bnd
nop
endbr64
push
bnd
nop
endbr64
push
bnd
nop
endbr64
push
bnd
nop
endbr64
push
bnd
nop
endbr64
push
bnd
nop
endbr64
push
bnd
nop
endbr64
bnd
nopl
endbr64
bnd
nopl
endbr64
bnd
nopl
endbr64
bnd
nopl
endbr64
bnd
nopl
endbr64
bnd
nopl
endbr64
bnd
nopl
endbr64
bnd
nopl
endbr64
bnd
nopl
endbr64
bnd
nopl
endbr64
bnd
nopl
endbr64
bnd
nopl
endbr64
bnd
nopl
endbr64
bnd
nopl
endbr64
bnd
nopl
endbr64
bnd
nopl
endbr64
bnd
nopl
endbr64
bnd
nopl
endbr64
bnd
nopl
endbr64
bnd
nopl
endbr64
bnd
nopl
endbr64
bnd
nopl
endbr64
bnd
nopl
endbr64
push
mov
push
push
push
push
mov
lea
push
mov
sub
mov
call
mov
mov
mov
lea
movb
mov
movb
movb
call
cmp
jne
mov
mov
call
cmp
ja
lea
mov
mov
lea
call
lea
lea
call
mov
test
je
call
xor
mov
xor
mov
mov
xor
xor
lea
lea
xor
mov
xor
call
mov
mov
movq
movl
jmp
xchg
cmp
jne
cmp
je
mov
mov
lea
call
cmp
je
mov
add
and
add
shr
or
or
movzwl
cmp
jne
cmp
jne
lea
xor
cmp
cmova
mov
mov
lea
mov
test
je
lea
mov
mov
sub
cmp
ja
cmpl
jg
addl
movslq
lea
mov
jmp
lea
mov
mov
mov
mov
cmp
jbe
mov
call
mov
lea
test
je
mov
lea
mov
mov
xor
call
lea
lea
call
mov
test
je
call
xor
xor
xor
mov
mov
movl
movq
xchg
mov
call
mov
cmp
je
mov
add
movslq
add
shr
or
mov
and
or
lea
mov
lea
cmp
jne
mov
mov
shl
shr
or
lea
cmpq
mov
je
cmp
ja
cmp
jae
add
cmp
jne
xor
mov
lea
mov
rep
lea
lea
lea
call
mov
lea
call
lea
lea
mov
test
lea
cmovne
mov
mov
sub
mov
mov
mov
lea
xor
mov
call
movzbl
test
je
nopl
cmp
jne
movb
movzbl
add
test
jne
movslq
lea
mov
lea
add
call
lea
call
cmp
jbe
lea
cmpb
je
lea
mov
mov
lea
sub
lea
call
mov
mov
lea
lea
mov
mov
xor
call
mov
mov
xor
lea
call
mov
cmp
je
lea
mov
call
mov
test
je
mov
call
mov
test
je
mov
movb
mov
mov
movq
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
jmp
nopl
mov
mov
cmp
je
add
and
add
or
mov
mov
nopl
lea
cmp
je
lea
mov
mov
jmp
nopl
lea
cmp
mov
jne
mov
mov
cmp
jge
add
movq
mov
jmp
nopl
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
jmp
nopl
add
add
or
mov
mov
sub
jb
mov
mov
mov
mov
shr
mov
and
cmp
jne
mov
movzbl
call
cmp
je
addq
movl
mov
sub
jae
mov
mov
mov
call
mov
mov
cmp
jl
mov
lea
mov
lea
mov
xor
call
add
xor
pop
pop
pop
pop
pop
pop
ret
mov
mov
mov
lea
lea
mov
xor
mov
call
lea
movslq
mov
mov
lea
mov
lea
mov
lea
mov
jmp
sub
cmp
jbe
lea
mov
test
je
mov
mov
mov
lea
mov
mov
xor
call
jmp
mov
movzbl
mov
call
mov
add
je
and
lea
addq
movl
mov
mov
jmp
cmpb
lea
jne
cmpb
lea
jne
cmpb
jne
jmp
mov
lea
mov
lea
mov
mov
xor
call
mov
mov
mov
lea
mov
call
mov
call
call
mov
call
lea
lea
lea
mov
mov
mov
xor
call
mov
call
call
lea
lea
lea
jmp
lea
mov
mov
mov
xor
call
mov
call
mov
mov
lea
lea
lea
mov
mov
xor
call
mov
mov
lea
lea
mov
xor
call
lea
lea
jmp
lea
lea
lea
jmp
mov
mov
mov
lea
lea
mov
xor
call
mov
call
nopw
endbr64
xor
mov
pop
mov
and
push
push
xor
xor
lea
call
hlt
cs
lea
lea
cmp
je
mov
test
je
jmp
nopl
ret
nopl
lea
lea
sub
mov
shr
sar
add
sar
je
mov
test
je
jmp
nopw
ret
nopl
endbr64
cmpb
jne
push
cmpq
mov
je
mov
call
call
movb
pop
ret
nopl
ret
nopl
endbr64
jmp
nopl
push
lea
mov
xor
push
mov
mov
lea
sub
mov
mov
call
mov
mov
mov
lea
xor
call
mov
call
nopw
push
lea
mov
xor
push
lea
mov
lea
sub
mov
mov
call
mov
call
mov
mov
mov
lea
xor
call
mov
call
push
mov
mov
call
test
je
mov
movq
movb
pop
ret
call
nopl
push
mov
mov
test
jle
mov
sub
mov
pop
sar
and
ret
nopl
mov
call
cmp
jne
call
mov
test
jne
mov
pop
ret
nop
mov
sar
movl
and
pop
ret
call
nopw
push
cmpb
mov
jne
mov
mov
cmp
jg
nopl
add
add
cmp
jne
movl
mov
mov
movzbl
call
cmp
je
mov
addq
call
cmp
je
mov
call
cmp
jne
cmpb
je
call
nopl
mov
pop
jmp
nopl
call
data16
push
movzbl
push
push
mov
push
mov
sub
jmp
nopl
add
add
or
mov
mov
sub
jb
mov
mov
mov
mov
shr
and
cmp
jne
mov
movzbl
call
cmp
je
addq
movl
mov
sub
jae
add
pop
pop
pop
pop
ret
call
endbr64
sub
add
ret
