endbr64
sub
mov
test
je
call
add
ret
push
bnd
nopl
endbr64
push
bnd
nop
endbr64
push
bnd
nop
endbr64
push
bnd
nop
endbr64
push
bnd
nop
endbr64
push
bnd
nop
endbr64
push
bnd
nop
endbr64
push
bnd
nop
endbr64
push
bnd
nop
endbr64
push
bnd
nop
endbr64
push
bnd
nop
endbr64
push
bnd
nop
endbr64
push
bnd
nop
endbr64
push
bnd
nop
endbr64
push
bnd
nop
endbr64
push
bnd
nop
endbr64
push
bnd
nop
endbr64
push
bnd
nop
endbr64
push
bnd
nop
endbr64
push
bnd
nop
endbr64
push
bnd
nop
endbr64
bnd
nopl
endbr64
bnd
nopl
endbr64
bnd
nopl
endbr64
bnd
nopl
endbr64
bnd
nopl
endbr64
bnd
nopl
endbr64
bnd
nopl
endbr64
bnd
nopl
endbr64
bnd
nopl
endbr64
bnd
nopl
endbr64
bnd
nopl
endbr64
bnd
nopl
endbr64
bnd
nopl
endbr64
bnd
nopl
endbr64
bnd
nopl
endbr64
bnd
nopl
endbr64
bnd
nopl
endbr64
bnd
nopl
endbr64
bnd
nopl
endbr64
bnd
nopl
endbr64
bnd
nopl
endbr64
push
lea
push
lea
sub
mov
mov
mov
mov
mov
mov
xor
call
lea
mov
call
lea
mov
call
mov
call
mov
movq
call
mov
lea
mov
mov
call
lea
mov
mov
lea
call
test
je
mov
call
mov
mov
test
je
or
jne
cmpl
jne
cmpl
je
mov
call
jmp
cmpl
jne
test
je
cmpl
je
lea
call
mov
sub
jne
add
xor
pop
pop
ret
test
je
xor
mov
lea
call
lea
mov
xor
call
cmpl
je
lea
call
jmp
xor
call
jmp
mov
call
jmp
mov
lea
mov
xor
mov
xor
call
mov
call
mov
call
call
nopl
endbr64
xor
mov
pop
mov
and
push
push
xor
xor
lea
call
hlt
cs
lea
lea
cmp
je
mov
test
je
jmp
nopl
ret
nopl
lea
lea
sub
mov
shr
sar
add
sar
je
mov
test
je
jmp
nopw
ret
nopl
endbr64
cmpb
jne
push
cmpq
mov
je
mov
call
call
movb
pop
ret
nopl
ret
nopl
endbr64
jmp
nopl
push
xor
mov
push
sub
mov
mov
xor
mov
movq
call
test
je
push
lea
xor
xor
push
lea
mov
mov
mov
call
mov
mov
call
pop
pop
test
je
mov
sub
jne
add
mov
pop
pop
ret
mov
lea
xor
xor
mov
mov
xor
call
mov
call
mov
lea
xor
call
lea
mov
xor
call
jmp
xor
mov
lea
call
lea
mov
xor
call
jmp
call
data16
push
mov
push
sub
mov
mov
xor
call
test
je
movq
sub
xor
xor
mov
lea
mov
xor
push
mov
mov
call
mov
pop
pop
test
je
mov
xor
mov
lea
mov
xor
call
mov
call
mov
call
mov
sub
jne
add
pop
pop
ret
mov
call
jmp
call
data16
nopl
push
mov
push
sub
mov
mov
xor
call
test
je
mov
mov
lea
xor
movq
call
sub
xor
xor
mov
lea
lea
mov
push
mov
call
mov
pop
pop
test
je
mov
xor
lea
xor
mov
call
mov
call
mov
call
mov
sub
jne
add
pop
pop
ret
mov
call
jmp
call
endbr64
sub
add
ret
